<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mi.model.dao.ProductDAO">

    <select id="selectAllProducts" parameterType="Map" resultType="Product">
        select
        product_id, product_name, product_intro, product_price, product_color, product_version,
        product_size, product_sales, product_max, product_url, product_time, sc_id
        from
        product
        <where>
            product_status = 1
            <if test="scId != null">
                and sc_id = #{scId}
            </if>
            <if test="productName != null and productName != ''">
                and product_name like CONCAT(CONCAT('%',#{productName},'%'))
            </if>
        </where>
        limit #{index}, #{limit}
    </select>

    <select id="selectAllProductsCount" parameterType="Map" resultType="int">
        select
        count(*)
        from
        product
        <where>
            product_status = 1
            <if test="scId != null">
                and sc_id = #{scId}
            </if>
            <if test="productName != null and productName != ''">
                and product_name like CONCAT(CONCAT('%',#{productName},'%'))
            </if>
        </where>
    </select>

    <update id="deleteProduct" parameterType="int">
        update
          product
        set
          product_status = 0
        where
          product_id = #{productId}
    </update>

    <insert id="addProduct" parameterType="Product">
        insert into
          product(product_id, product_name, product_intro, product_price, product_color,
          product_version, product_size, sc_id, product_time, product_max, product_url,
          product_status)
        value
          (#{productId}, #{productName}, #{productIntro}, #{productPrice}, #{productColor},
          #{productVersion}, #{productSize}, #{scId}, #{productTime}, #{productMax}, #{productUrl}, 1)

    </insert>

    <select id="selectProductById" parameterType="int" resultType="Product">
        select
          *
        from
          product
        where
          product_id = #{productId}
    </select>

    <update id="updateProduct" parameterType="Product">
        update
          product
        set
          sc_id = #{scId},
          product_name = #{productName},
          product_intro = #{productIntro},
          product_price = #{productPrice},
          product_color = #{productColor},
          product_version = #{productVersion},
          product_size = #{productSize},
          product_max = #{productMax},
          product_url = #{productUrl}
        where
          product_id = #{productId}
    </update>

    <select id="selectProductsByName" parameterType="String" resultMap="productMaps">
        select
          *
        from
          product
        where
          product_name = #{productName}
    </select>
    <resultMap id="productMaps" type="Product">
        <result column="product_id" property="productId"/>
        <result column="product_name" property="productName"/>
        <result column="product_intro" property="productIntro"/>
        <result column="product_price" property="productPrice"/>
        <result column="product_color" property="productColor"/>
        <result column="product_version" property="productVersion"/>
        <result column="product_size" property="productSize"/>
        <result column="product_sales" property="productSales"/>
        <result column="product_max" property="productMax"/>
        <result column="product_url" property="productUrl"/>
        <result column="product_time" property="productTime"/>
        <result column="sc_id" property="scId"/>
        <collection property="details" ofType="Detail" select="selectDetails" column="product_id"></collection>
    </resultMap>
    <select id="selectDetails" parameterType="int" resultType="Detail">
        select
          *
        from
          detail
        where product_id = #{product_id}
    </select>

    <select id="selectProductByNCVS" parameterType="Product" resultType="Product">
        select
        *
        from
        product
        where
        product_name = #{productName}
        <if test="productColor !=null and productColor != ''">
            and product_color = #{productColor}
        </if>
        <if test="productVersion !=null and productVersion != ''">
            and product_version = #{productVersion}
        </if>
        <if test="productSize !=null and productSize != ''">
            and product_size = #{productSize}
        </if>
    </select>

    <select id="selectProductsByNFC" parameterType="Map" resultMap="productNFCMaps">
        select
          p.*, f.*, s.*
        from
          product p, first_classification f, second_classification s
        <where>
            product_status = 1
            and p.sc_id = s.sc_id
            and f.fc_id = s.fc_id
            <if test="fcId != null">
                and f.fc_id = #{fcId}
            </if>
            <if test="scId != null">
                and s.sc_id = #{scId}
            </if>
            <if test="productName != null and productName != ''">
                and p.product_name like CONCAT(CONCAT('%',#{productName},'%'))
            </if>
        </where>
    </select>
    <resultMap id="productNFCMaps" type="Product">
        <result column="product_id" property="productId"/>
        <result column="product_name" property="productName"/>
        <result column="product_intro" property="productIntro"/>
        <result column="product_price" property="productPrice"/>
        <result column="product_color" property="productColor"/>
        <result column="product_version" property="productVersion"/>
        <result column="product_size" property="productSize"/>
        <result column="product_sales" property="productSales"/>
        <result column="product_max" property="productMax"/>
        <result column="product_url" property="productUrl"/>
        <result column="product_time" property="productTime"/>
        <result column="sc_id" property="scId"/>
    </resultMap>

    <update id="updateProductSales" parameterType="Map">
        update
          product
        set
          product_sales = product_sales + #{amount}
        where
          product_id = #{productId}
    </update>

    <select id="getProductsOrderedBySale" parameterType="Map" resultType="Product">
        select
          *
        from
          product
        where
          product_status = 1
        order by product_sales desc
        limit #{index}, #{limit}
    </select>

    <select id="selectProductColor" parameterType="Product" resultType="String">
        select
        DISTINCT product_color
        from
        product
        where
        product_name = #{productName}
        <if test="productSize != null and productSize != ''">
            and product_size = #{productSize}
        </if>
        <if test="productVersion != null and productVersion != ''">
            and product_version = #{productVersion}
        </if>
    </select>

    <select id="selectProductSize" parameterType="String" resultMap="sizeResult">
        select
        DISTINCT product_size,product_price
        from
        product
        where
        product_name = #{productName}
    </select>

    <select id="selectProductVersion" parameterType="String" resultMap="versionResult">
        select
        DISTINCT product_version,product_price
        from
          product
        where
          product_name = #{productName}
    </select>

    <select id="selectProductPic" parameterType="map" resultType="String">
        select
        DISTINCT detail_value
        from
        product,detail
        where
        product_name = #{k_product.productName} and product.product_id = detail.product_id and detail_key LIKE #{k_place}
        <if test="k_product.productColor !=null and k_product.productColor != ''">
            and product_color = #{k_product.productColor}
        </if>
    </select>


    <resultMap id="sizeResult" type="Descripe">
        <result column="product_price" property="price"/>
        <result column="product_size" property="descipetion"/>
    </resultMap>

    <resultMap id="versionResult" type="Descripe">
        <result column="product_price" property="price"/>
        <result column="product_version" property="descipetion"/>
    </resultMap>

    <select id="getProductInHotSale" parameterType="map" resultMap="productHotMap">
        SELECT
        product_name,
        count( orderitem_id ) order_count
        FROM
        second_classification,product
        LEFT JOIN ( SELECT * FROM orderitem LEFT JOIN `order` USING ( order_id ) WHERE order_generation_time &gt;=
        #{k_pastTime} AND order_generation_time &lt;= #{k_nowTime} )
        AS item
        ON `product`.product_id = item.product_id where second_classification.sc_id  = product.sc_id
        <if test="k_fc !=null and k_fc != ''">and fc_id = #{k_fc}</if>
        GROUP BY
        product_name
        ORDER BY
        order_count DESC
    </select>

    <resultMap id="productHotMap" type="Product">
        <result column="product_name" property="productName"/>
        <result column="order_count" property="productSales"/>
    </resultMap>

    <select id="getAllSortedProductId" resultType="int">
        select product_id
        from product
        where product_status = 1
        order by product_id asc
    </select>

    <select id="getProductByIds" resultMap="product" parameterType="java.util.List">
        select *
        from product
        where product_id
        in
        <foreach collection="list" item="id" index="index" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>
    <resultMap type="Product" id="product">
        <id property="productId" column="product_id"/>
        <result property="productName" column="product_name" />
        <result property="productUrl" column="product_url"/>
        <result property="productPrice" column="product_price"/>
        <result property="productTime" column="product_time" jdbcType="TIMESTAMP"/>
        <result property="productIntro" column="product_intro"/>
        <result property="productVersion" column="product_version"/>
    </resultMap>

    <select id="getLowestPrice" parameterType="String" resultMap="productNFCMaps">
        SELECT *
        FROM product po
        INNER JOIN (
          SELECT MIN( product_price ) minPrice, product_name
          FROM product
          WHERE product_name =#{productName}
	    ) AS p ON p.product_name =po.product_name AND po.product_price = p.minPrice
    </select>

    <select id="selectProductsByNFCPage" parameterType="Map" resultMap="productNFCMaps">
        select
        p.*, f.*, s.*
        from
        product p, first_classification f, second_classification s
        <where>
            product_status = 1
            and p.sc_id = s.sc_id
            and f.fc_id = s.fc_id
            <if test="fcId != null">
                and f.fc_id = #{fcId}
            </if>
            <if test="scId != null">
                and s.sc_id = #{scId}
            </if>
            <if test="productName != null and productName != ''">
                and p.product_name like concat('%',#{productName},'%')
            </if>
        </where>
        limit #{index},#{limit}
    </select>

    <!--得到查询商品数量-->
    <select id="selectPageNum" resultType="int" parameterType="map">
        select count(*) from (
        select
        p.product_id
        from
        product p, first_classification f, second_classification s
        <where>
            product_status = 1
            and p.sc_id = s.sc_id
            and f.fc_id = s.fc_id
            <if test="fcId != null">
                and f.fc_id = #{fcId}
            </if>
            <if test="scId != null">
                and s.sc_id = #{scId}
            </if>
            <if test="productName != null and productName != ''">
                and p.product_name like concat('%',#{productName},'%')
            </if>
        </where>
        )as a
    </select>

    <!--得到根据评论数排序后的商品列表-->
    <select id="selectProductSortedByReviews" parameterType="Map" resultMap="productNFCMaps">
        SELECT c.* FROM
        (SELECT b.*,com.comment_id FROM
        (SELECT a.*,o.orderitem_id from
        (
        select
        p.*, f.fc_id,f.fc_name, s.sc_name
        from
        `product` p, `first_classification` f, `second_classification` s
        <where>
            product_status = 1
            and p.sc_id = s.sc_id
            and f.fc_id = s.fc_id
            <if test="fcId != null">
                and f.fc_id = #{fcId}
            </if>
            <if test="scId != null">
                and s.sc_id = #{scId}
            </if>
            <if test="productName != null and productName != ''">
                and p.product_name like concat('%',#{productName},'%')
            </if>
        </where>
        ) as a
        LEFT JOIN orderitem o on o.product_id = a.product_id)as b
        LEFT JOIN `comment` com on com.orderitem_id = b.orderitem_id)as c
        GROUP BY c.product_id ORDER BY COUNT(*) DESC limit #{index},#{limit}

    </select>

    <!--按照销售数量进行排序-->
    <select id="selectProductSortedBySales" parameterType="Map" resultMap="productNFCMaps">
        select
        p.*, f.fc_id,f.fc_name, s.sc_name
        from
        `product` p, `first_classification` f, `second_classification` s
        <where>
            product_status = 1
            and p.sc_id = s.sc_id
            and f.fc_id = s.fc_id
            <if test="fcId != null">
                and f.fc_id = #{fcId}
            </if>
            <if test="scId != null">
                and s.sc_id = #{scId}
            </if>
            <if test="productName != null and productName != ''">
                and p.product_name like concat('%',#{productName},'%')
            </if>
        </where>
        ORDER BY p.product_sales DESC
        limit #{index}, #{limit}
    </select>
    <!--按照价格降序排序-->
    <select id="selectProductSortedByPriceDesc" parameterType="Map" resultMap="productNFCMaps">
        select
        p.*, f.fc_id,f.fc_name, s.sc_name
        from
        `product` p, `first_classification` f, `second_classification` s
        <where>
            product_status = 1
            and p.sc_id = s.sc_id
            and f.fc_id = s.fc_id
            <if test="fcId != null">
                and f.fc_id = #{fcId}
            </if>
            <if test="scId != null">
                and s.sc_id = #{scId}
            </if>
            <if test="productName != null and productName != ''">
                and p.product_name like concat('%',#{productName},'%')
            </if>
        </where>
        ORDER BY p.product_price DESC
        limit #{index},#{limit}

    </select>
    <!--按照价格升序排序-->
    <select id="selectProductSortedByPriceAsc" parameterType="Map" resultMap="productNFCMaps">
        select
        p.*, f.fc_id,f.fc_name, s.sc_name
        from
        `product` p, `first_classification` f, `second_classification` s
        <where>
            product_status = 1
            and p.sc_id = s.sc_id
            and f.fc_id = s.fc_id
            <if test="fcId != null">
                and f.fc_id = #{fcId}
            </if>
            <if test="scId != null">
                and s.sc_id = #{scId}
            </if>
            <if test="productName != null and productName != ''">
                and p.product_name like concat('%',#{productName},'%')
            </if>
        </where>
        ORDER BY p.product_price ASC
        limit #{index},#{limit}

    </select>
    <!--按照上架时间最新排序-->
    <select id="selectProductSortedByTime" parameterType="Map" resultMap="productNFCMaps">
        select
        p.*, f.fc_id,f.fc_name, s.sc_name
        from
        `product` p, `first_classification` f, `second_classification` s
        <where>
            product_status = 1
            and p.sc_id = s.sc_id
            and f.fc_id = s.fc_id
            <if test="fcId != null">
                and f.fc_id = #{fcId}
            </if>
            <if test="scId != null">
                and s.sc_id = #{scId}
            </if>
            <if test="productName != null and productName != ''">
                and p.product_name like concat('%',#{productName},'%')
            </if>
        </where>
        ORDER BY UNIX_TIMESTAMP(p.product_time) DESC
        limit #{index}, #{limit}
    </select>

    <select id="selectFcByProductId" parameterType="map" resultType="int">
        SELECT
        fc_id
        FROM
        product,
        second_classification
        WHERE
        second_classification.sc_id  = product.sc_id and product.product_id = #{productId}
    </select>

</mapper>